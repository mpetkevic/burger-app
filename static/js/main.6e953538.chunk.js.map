{"version":3,"sources":["images/drinks.png","images/main_dish.png","images/cake.png","images/special.png","components/Header.js","components/Table.js","components/Orders.js","components/Settings.js","components/Statistics.js","components/Menu.js","App.js","serviceWorker.js","index.js","reducers/workerReducer.js"],"names":["module","exports","__webpack_require__","p","Header","props","navItems","nav","map","navItem","i","react_default","a","createElement","key","className","active","onClick","changeActive","Table","total","tableorders","orders","filter","item","table","index","price","count","name","removeOrder","changeTable","title","checkout","toFixed","Orders","tables","components_Table","activeTable","Settings","state","_this2","this","onSubmit","e","addSpecial","type","workers","worker","React","Component","connect","Statistics","images","drinks","dishes","deserts","special","Menu","menuItems","menu","addOrder","categories","cat","onCateroryChange","activeCategory","src","alt","MENU_URL","App","navigation","activeTab","componentDidMount","_callee","_ref2","data","regenerator_default","wrap","_context","prev","next","axios","get","sent","console","log","_this","setState","stop","menuItem","n","order","Object","objectSpread","toConsumableArray","concat","preventDefault","completed","push","activeTabChange","activeTableChange","tableTotal","content","components_Orders","components_Statistics","components_Settings","_this$state","components_Header","components_Menu","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","length","undefined","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e953538.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drinks.d5055ab8.png\";","module.exports = __webpack_public_path__ + \"static/media/main_dish.ad7538d1.png\";","module.exports = __webpack_public_path__ + \"static/media/cake.12d7c29c.png\";","module.exports = __webpack_public_path__ + \"static/media/special.f5125271.png\";","import React from 'react';\n\nconst Header = (props) => {\n  const navItems = props.nav.map((navItem, i) => {\n    return (\n      <li\n        key={navItem}\n        className={i === props.active? 'active' : null}\n        onClick={()=> props.changeActive(i)}\n      >{navItem}</li>\n    )\n  });\n  return (\n    <header>\n      <h2>Menu</h2>\n      <nav>\n        <h1>Home <span>Grill</span></h1>\n        <ul>\n          {navItems}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\n\nconst Table = (props) => {\n  let total = 0;\n  const tableorders = props.orders.filter((item, i) => {\n    if(item.table === props.index) {\n      total += item.price * item.count;\n      return item;\n    }\n  }).map((item, i) =>{\n    return (\n      <li className='item' key={i}>\n        {item.count}x {item.name}\n        <span onClick={() => props.removeOrder(item)} className=\"delete\">X</span>\n        <span className=\"price\">{item.price}</span>\n      </li>\n    )\n  });\n\n  return (\n    <div\n      className={props.active === props.index ? 'table active-table' : 'table'}\n      onClick={() => props.changeTable(props.index)}\n    >\n      <h4>{props.title}</h4>\n      <ul>\n        {tableorders}\n      </ul>\n      <nav>\n        <div onClick={() => props.checkout(total, props.index)} className=\"btn\">Check out</div>\n        <h5>{total.toFixed(2)}â‚¬</h5>\n      </nav>\n    </div>\n  );\n};\n\nexport default Table;","import React from 'react';\nimport Table from './Table'\n\nconst Orders = (props) => {\n  const tables = props.tables.map((table, i) => {\n    return <Table\n      key={i}\n      title={table}\n      index={i}\n      active={props.activeTable}\n      changeTable={props.changeTable}\n      orders={props.orders}\n      removeOrder={props.removeOrder}\n      checkout={props.checkout}\n    />\n  });\n\n  return (\n    <div className='orders'>\n      {tables}\n    </div>\n  );\n};\n\nexport default Orders;","import React from 'react';\nimport {connect} from 'react-redux'\n\n\nclass Settings extends React.Component{\n  state={\n    name:'',\n    price:''\n  }\n  render(){\n    return (\n      <div>\n        <form onSubmit={(e)=>this.props.addSpecial(e,this.state)}>\n          <input type=\"text\"/>\n          <input type=\"number\"/>\n          <button>add</button>\n        </form>\n        {this.props.workers.map((worker) => <li key={worker}>{worker}</li>)}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    workers: state.workers\n  }\n}\nexport default connect(mapStateToProps)(Settings);","import React from 'react';\n\nconst Statistics = () => {\n  return (\n    <div>\n      Statistics\n    </div>\n  );\n};\n\nexport default Statistics;","import React from 'react';\nimport drinks from '../images/drinks.png';\nimport dishes from '../images/main_dish.png';\nimport deserts from '../images/cake.png';\nimport special from '../images/special.png';\n\nconst images = [drinks, dishes, deserts, special];\n\nconst Menu = (props) => {\n  const menuItems = props.menu && props.menu.map((item, i) => {\n    return (\n      <li\n        key={i}\n        onClick={() => props.addOrder(item)}\n      >\n        {item.name}<span>{item.price}â‚¬</span>\n      </li>\n    )\n  })\n\n  const categories = props.categories.map((cat, i ) => {\n    return (\n      <div\n        key={cat}\n        onClick={() => props.onCateroryChange(i)}\n        className={props.activeCategory === i ? \"category active-cat\" : \"category\"}>\n        <img src={images[i]} alt=\"\"/>\n        <h3>{cat}</h3>\n      </div>\n    )\n  })\n\n  return (\n    <div className=\"menu\">\n      <div className=\"categories\">\n        {categories}\n      </div>\n      <ul className=\"menu-items\">\n        {menuItems}\n      </ul>\n    </div>\n  );\n};\n\nexport default Menu;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Orders from './components/Orders';\nimport Settings from './components/Settings';\nimport Statistics from './components/Statistics';\nimport Menu from './components/Menu';\nimport axios from 'axios';\n\nconst MENU_URL = 'http://enigmatic-cliffs-25405.herokuapp.com/menu';\n\nclass App extends Component {\n  state = {\n    navigation: ['Orders', 'Statistics', 'Settings'],\n    activeTab: 0,\n    categories: ['drinks', 'dishes', 'deserts', 'special'],\n    tables: ['Two person table', 'Family table', 'Progers Table', 'Coffee Table'],\n    activeTable: 0,\n    activeCategory: 0,\n    orders: [],\n    menu: null,\n    total: 0\n  }\n\n  componentDidMount = async() => {\n    const {data} = await axios.get(MENU_URL); // palaukim, kol ateis doumenys\n    // doumenys pasieksime kaip res.data\n    console.log(data)\n    this.setState({menu: data.menu});\n  }\n\n  addOrder = (menuItem)=>{\n    let n=false;\n    const orders = this.state.orders.map((order)=>{\n      if(order.name===menuItem.name && order.table===this.state.activeTable){\n        n=true;\n        return {...order,count:order.count+1}\n      }else{\n        return order\n      }\n    });\n    if(n){\n      this.setState({orders})\n    }else{\n      const orders =[...this.state.orders,{...menuItem, table:this.state.activeTable, count:1}];\n      this.setState({orders})\n    }\n  };\n\n  addSpecial = (e,item) => {\n    e.preventDefault()\n    console.log(item);\n  };\n  checkout = (table, total) => {\n    console.log(table);\n    const completed = [...this.state.completed];\n    this.setState({\n      orders: this.state.orders.filter((order) => {\n        if (order.table !== table) {\n          return order\n        } else {\n          completed.push(order)\n        }\n      })\n    })\n    this.setState({total: this.state.total + total, completed})\n  };\n\n  removeOrder = (order) => {\n    if(order.count > 1) {\n      const orders = this.state.orders.map((item)=>{\n        if(item.name===order.name && item.table===this.state.activeTable){\n          return {...item,count:item.count-1}\n        }else{\n          return item;\n        }\n      });\n      this.setState({orders});\n    } else {\n      const orders = this.state.orders.filter((item)=>{\n        if(item.name !==order.name && item.table ===this.state.activeTable) {\n          return item;\n        }\n      });\n      this.setState({orders});\n    }\n  }\n\n  activeTabChange = activeTab => this.setState({activeTab})\n\n  activeTableChange = activeTable => this.setState({activeTable});\n\n  onCateroryChange = activeCategory => this.setState({activeCategory});\n\n  checkout = (tableTotal, table) => {\n    this.setState({total: this.state.total + tableTotal});\n\n  }\n\n  render() {\n    const content = [\n      <Orders\n        key=\"1\"\n        tables={this.state.tables}\n        activeTable={this.state.activeTable}\n        changeTable={this.activeTableChange}\n        orders={this.state.orders}\n        removeOrder={this.removeOrder}\n        checkout={this.checkout}\n      />,\n      <Statistics\n        key=\"2\"\n      />,\n      <Settings\n        key=\"3\"\n        addSpecial={this.addSpecial}\n      />\n      ];\n\n    const {menu, categories, activeCategory} = this.state;\n    return (\n      <div className=\"App\">\n        <Header\n          nav={this.state.navigation}\n          active={this.state.activeTab}\n          changeActive={this.activeTabChange}\n        />\n        <Menu\n          categories={this.state.categories}\n          activeCategory={this.state.activeCategory}\n          onCateroryChange={this.onCateroryChange}\n          menu={menu && menu[categories[activeCategory]]}\n          addOrder={this.addOrder}\n        />\n        {content[this.state.activeTab]}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {combineReducers, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport workerReducer from './reducers/workerReducer';\nimport App from './App';\nimport './style/main.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers({\n  workers: workerReducer\n})\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = ['ann', 'john']) => {\n  return state;\n}"],"sourceRoot":""}